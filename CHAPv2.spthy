theory CHAPv2
begin

/*
We assume that the server B and client A share password k(A,B) in advance. The server and client generate nonces Nb and Na, respectively.
  1. A -> B : A
  2. B -> A : Nb
  3. A -> B : Na,H(k(A,B),(Na,Nb,A))
  4. B -> A : H(k(A,B),Na)

*/

// lowe
functions: h/1

rule Register_SK:
    [ Fr(~SK_AB)]
    -->
    [ !Shared_Key($A, $B, ~SK_AB) ]

rule Reveal_SK:
    [ !Shared_Key(A, B, SK_AB)]
    --[ SK_Reveal(A,B) ]->
    [ Out(SK_AB) ]

rule Client_1: // Client is A, Server is B
    [ !Shared_Key(A, B, SK_AB) ]
    -->
    [ Out(A),
      Client_1(A, B, SK_AB)
     ]

rule Server_1:
    [ In(A),
      Fr(~Nb)
    ]
    -->
    [ Out(~Nb),
      Server_1(~Nb)
     ]

rule Client_2:
    [ In(Nb),
      Fr(~Na),
      Client_1(A,B,SK_AB)
    ]
    -->
    [
      Out(<~Na,h(<SK_AB,~Na,Nb,A>)>),
      Client_2(~Na,Nb,A,B,SK_AB)
    ]
rule Server_2:
    [ In( hashed ),
    //In(<Na,h(<SK_AB,Na,Nb,A>)>),
      !Shared_Key(A, B, SK_AB),
      Server_1(Nb)
    ]
    --[ Eq1( snd(hashed), h( <SK_AB, fst(hashed), Nb, A> ) ),
        Auth_Nb( A, B, SK_AB, Nb)
    //Server side auth complete

    ]->
    [
     Out(h(<SK_AB,fst(hashed)>))
    ]

rule Client_3:
    [ In( hashed ),
    //In(h(<SK_AB,Na>)),
      Client_2(Na,Nb,A,B,SK_AB)]
    --[ Eq2( hashed, h( <SK_AB, Na> ) ), // client side auth complete
        Auth_Na( A, B, SK_AB, Na),
        Session(Na,Nb,A,B,SK_AB)
        ]->
    []

axiom Equality_Checks_Succeed1: "All x y #i. Eq1(x,y) @ i ==> x = y "
axiom Equality_Checks_Succeed2: "All x y #i. Eq2(x,y) @ i ==> x = y "


lemma SK_secrecy:
    " /* It cannot be that a */
    not(
        Ex Na Nb A B SK_AB #i #j.
            Session( Na, Nb, A, B, SK_AB ) @ #i
        & K(SK_AB) @ #j
        & not( Ex #r. SK_Reveal(A,B) @r)
    )
    "

lemma Auth_on_Na:
    "
    (All A B SK_AB Na #i. Auth_Na(A, B, SK_AB, Na) @ #i
        ==>
            (All x y #j. Eq2(x,y) @j ==> x = y)
    )
    "

lemma Auth_on_Nb:
    "
    ( All A B SK_AB Nb #i. Auth_Nb(A, B, SK_AB, Nb) @ #i
        ==>
            (All x y #j. Eq1(x,y) @j ==> x = y)
    )
    "
end
